---
title: "Tidy Tuesday"
author: "Mathias Steilen"
date: "04/06/2024"
format: 
  html:
    other-links:
      - text: TidyTuesday Repo (Data Source)
        href: https://github.com/rfordatascience/tidytuesday/tree/master
    toc: true
    toc-expand: 2
    toc-title: "Table of Contents"
    number-sections: true
    code-fold: true
    code-tools:
      source: true
      toggle: true
      caption: "Code Options"
    code-block-bg: true
    code-block-border-left: "#191970"
    highlight-style: monochrome
    echo: true
    warning: false
    embed-resources: true
---

# Setup {.unnumbered}

Load packages

```{python}
# Load packages
import pandas as pd
import polars as pl
import numpy as np
import plotnine as pn

# Allow to show more columns than default
pd.set_option("display.max.columns", 500)
pl.Config.set_tbl_cols(500)
```

And set the custom theme and colours for plotnine charts:

```{python}
# Colour theme
jama_colour = [
    "#374e55",
    "#df8f44",
    "#00a1d5",
    "#b24745",
    "#79af97",
]

background_colour = "#F2F2F2"

pn.theme_set(
    pn.theme_classic()
    + pn.theme(
        figure_size=[7, 7 / 1.618],
        text=pn.element_text(family="Aptos"),
        plot_background=pn.element_rect(
            fill=background_colour, colour=background_colour
        ),
        panel_background=pn.element_rect(
            fill=background_colour, colour=background_colour
        ),
        legend_background=pn.element_rect(
            fill=background_colour, colour=background_colour
        ),
    )
)
```

# The Data

# The Chart(s)

## First Chart

```{python}
# | echo: True
# | warning: false
# | cache: true
# | label: chart1
# | fig-cap: "This week's plot innit"

fig = (
    pn.ggplot(data=pd.DataFrame({"x": np.random.normal(size=10)}), mapping=pn.aes("x"))
    + pn.geom_histogram()
    + pn.labs(title="Hello", x="Test", y="Test2")
)

fig
```

```{python}
# | include: false
fig.save(filename="test.png", dpi=300, height=5, width=10, verbose=False)
```
